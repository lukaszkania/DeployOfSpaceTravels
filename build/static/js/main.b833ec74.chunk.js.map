{"version":3,"sources":["components/homepage/NavBar.js","components/homepage/CompanyName.js","components/homepage/HomePage.js","components/footer/Footer.js","constants/LIST_OF_COUNTRIES.js","components/registerForm/RegisterForm.js","components/register/Register.js","components/loginForm/LoginForm.js","components/login/Login.js","constants/API_URLS.js","components/tourists/Tourists.js","components/flights/SingleFLight.js","components/flights/Flights.js","components/touristList/SingleTourist.js","components/touristList/TouristList.js","components/addForms/addFlight/AddFlight.js","components/addForms/addTourist/AddTourist.js","components/deleteForm/deleteFlight/DeleteFlight.js","components/editForms/editFlight/EditFlight.js","components/editForms/editTourist/EditTourist.js","components/deleteForm/deleteTourist/DeleteTourist.js","components/addFlightToTourist/AddFlightToTourist.js","components/userFlightsList/SingleFlight.js","components/userFlightsList/UserFlightsList.js","components/addTouristToFlight/AddTouristToFlight.js","components/pageNotFound/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","react_router_dom","to","CompanyName","cjs_react_router_dom","HomePage","components_homepage_NavBar","components_homepage_CompanyName","Footer","COUNTRY_LIST","RegisterForm","state","firstName","lastName","username","email","password","emailConfirm","sex","country","notes","dateOfBirth","handleChange","event","target","value","type","checked","_this","setState","name","mdbreact_esm","md","onSubmit","this","handleSubmit","htmlFor","id","onChange","array","map","index","toString","rows","color","Component","Register","Fragment","components_registerForm_RegisterForm","LoginForm","label","icon","group","validate","error","success","Login","loginForm_LoginForm","TOURISTS_API_URL","FLIGHTS_API_URL","Tourists","tourists","_this2","axios","get","then","response","data","catch","console","log","tourist","pk","first_name","last_name","birth_date","SingleFlight","singleFlightData","numberOfPassengers","props","flightPk","length","seatsAmount","Flights","flights","flight","key","departure_date","arrival_date","seats_amount","ticket_price","SingleFLight","SingleTourist","touristData","touristUrl","flightsSeatsAmount","onClick","handleDeletion","TouristList","match","params","flightNumber","listOfTourists","touristPk","_this3","url","finalListOfTourists","Object","assign","splice","indexOf","patch","alert","history","push","_this4","components_touristList_SingleTourist","bind","withRouter","AddFlight","departureDate","arrivalDate","ticketPrice","defineProperty","preventDefault","post","placeholder","step","f","rounded","AddTourist","handleSexSelectChange","handleCountrySelectChange","handleNotesChanges","LIST_OF_COUNTRIES","DeleteFlight","deleteFlight","flighPk","delete","outline","cancelDeletion","EditFlight","editFlight","EditTourist","birthDate","editTourist","touristNumber","DeleteTourist","deleteTourist","AddFlightToTourist","allFlights","touristFlights","finalListOfFlights","slice","addFlight","flightData","flightUrl","UserFlightsList","components_userFlightsList_SingleFlight","AddTouristToFLight","allTourists","passengers","finalListOfPassengers","addTourist","PageNotFound","App","react_router","exact","path","component","components_footer_Footer","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b833ec74.chunk.js","sourcesContent":["import React from 'react';\r\nimport './NavBar.scss'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n    // Navigation bar, displayed on every page\r\n    return (\r\n        <div className=\"navbar-container\">\r\n            <div className=\"nav-item\">\r\n                <Link to=\"/\">\r\n                    <h4>Home</h4>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"nav-item\">\r\n                <Link to=\"/register\">\r\n                    <h4>Register</h4>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"nav-item\">\r\n                <Link to=\"/login\">\r\n                    <h4>Login</h4>\r\n                </Link>\r\n            </div>\r\n\r\n            <div className=\"nav-item\">\r\n                <Link to=\"/flights\">\r\n                    <h4>Flights</h4>\r\n                </Link>\r\n\r\n            </div>\r\n\r\n            <div className=\"nav-item\">\r\n                <Link to=\"/tourists\">\r\n                    <h4>Tourists</h4>\r\n                </Link>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport './CompanyName.scss';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\n\r\nconst CompanyName = () => {\r\n    return (\r\n        <div className=\"companyname-container\">\r\n            <h2>\r\n                Space\r\n                <br></br>\r\n                Travels\r\n            </h2>\r\n            <h3>\r\n                Let us take You into future\r\n            </h3>\r\n\r\n            <Link to=\"/flights\">Book now</Link>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CompanyName;","import React from 'react';\r\nimport './HomePage.scss';\r\nimport NavBar from './NavBar';\r\nimport CompanyName from './CompanyName';\r\n\r\n// Our HomePage\r\nconst HomePage = () => {\r\n    return (\r\n        <div className=\"homepage-container\">\r\n            <NavBar />\r\n            <CompanyName />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = () => {\r\n    // Fotter component, displaying on every page\r\n    return (\r\n        <footer>\r\n            &copy; 2019 All rights reserved\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","// Variable that we using in selecting country in editig and creating tourist page\r\nconst COUNTRY_LIST = [\"Afghanistan\", \"Albania\", \"Algeria\", \"Andorra\", \"Angola\", \"Anguilla\", \"Antigua &amp; Barbuda\", \"Argentina\", \"Armenia\", \"Aruba\", \"Australia\", \"Austria\", \"Azerbaijan\", \"Bahamas\"\r\n    , \"Bahrain\", \"Bangladesh\", \"Barbados\", \"Belarus\", \"Belgium\", \"Belize\", \"Benin\", \"Bermuda\", \"Bhutan\", \"Bolivia\", \"Bosnia &amp; Herzegovina\", \"Botswana\", \"Brazil\", \"British Virgin Islands\"\r\n    , \"Brunei\", \"Bulgaria\", \"Burkina Faso\", \"Burundi\", \"Cambodia\", \"Cameroon\", \"Canada\", \"Cape Verde\", \"Cayman Islands\", \"Chad\", \"Chile\", \"China\", \"Colombia\", \"Congo\", \"Cook Islands\", \"Costa Rica\"\r\n    , \"Cote D Ivoire\", \"Croatia\", \"Cruise Ship\", \"Cuba\", \"Cyprus\", \"Czech Republic\", \"Denmark\", \"Djibouti\", \"Dominica\", \"Dominican Republic\", \"Ecuador\", \"Egypt\", \"El Salvador\", \"Equatorial Guinea\"\r\n    , \"Estonia\", \"Ethiopia\", \"Falkland Islands\", \"Faroe Islands\", \"Fiji\", \"Finland\", \"France\", \"French Polynesia\", \"French West Indies\", \"Gabon\", \"Gambia\", \"Georgia\", \"Germany\", \"Ghana\"\r\n    , \"Gibraltar\", \"Greece\", \"Greenland\", \"Grenada\", \"Guam\", \"Guatemala\", \"Guernsey\", \"Guinea\", \"Guinea Bissau\", \"Guyana\", \"Haiti\", \"Honduras\", \"Hong Kong\", \"Hungary\", \"Iceland\", \"India\"\r\n    , \"Indonesia\", \"Iran\", \"Iraq\", \"Ireland\", \"Isle of Man\", \"Israel\", \"Italy\", \"Jamaica\", \"Japan\", \"Jersey\", \"Jordan\", \"Kazakhstan\", \"Kenya\", \"Kuwait\", \"Kyrgyz Republic\", \"Laos\", \"Latvia\"\r\n    , \"Lebanon\", \"Lesotho\", \"Liberia\", \"Libya\", \"Liechtenstein\", \"Lithuania\", \"Luxembourg\", \"Macau\", \"Macedonia\", \"Madagascar\", \"Malawi\", \"Malaysia\", \"Maldives\", \"Mali\", \"Malta\", \"Mauritania\"\r\n    , \"Mauritius\", \"Mexico\", \"Moldova\", \"Monaco\", \"Mongolia\", \"Montenegro\", \"Montserrat\", \"Morocco\", \"Mozambique\", \"Namibia\", \"Nepal\", \"Netherlands\", \"Netherlands Antilles\", \"New Caledonia\"\r\n    , \"New Zealand\", \"Nicaragua\", \"Niger\", \"Nigeria\", \"Norway\", \"Oman\", \"Pakistan\", \"Palestine\", \"Panama\", \"Papua New Guinea\", \"Paraguay\", \"Peru\", \"Philippines\", \"Poland\", \"Portugal\"\r\n    , \"Puerto Rico\", \"Qatar\", \"Reunion\", \"Romania\", \"Russia\", \"Rwanda\", \"Saint Pierre &amp; Miquelon\", \"Samoa\", \"San Marino\", \"Satellite\", \"Saudi Arabia\", \"Senegal\", \"Serbia\", \"Seychelles\"\r\n    , \"Sierra Leone\", \"Singapore\", \"Slovakia\", \"Slovenia\", \"South Africa\", \"South Korea\", \"Spain\", \"Sri Lanka\", \"St Kitts &amp; Nevis\", \"St Lucia\", \"St Vincent\", \"St. Lucia\", \"Sudan\"\r\n    , \"Suriname\", \"Swaziland\", \"Sweden\", \"Switzerland\", \"Syria\", \"Taiwan\", \"Tajikistan\", \"Tanzania\", \"Thailand\", \"Timor L'Este\", \"Togo\", \"Tonga\", \"Trinidad &amp; Tobago\", \"Tunisia\"\r\n    , \"Turkey\", \"Turkmenistan\", \"Turks &amp; Caicos\", \"Uganda\", \"Ukraine\", \"United Arab Emirates\", \"United Kingdom\", \"United States\", \"United States Minor Outlying Islands\", \"Uruguay\"\r\n    , \"Uzbekistan\", \"Venezuela\", \"Vietnam\", \"Virgin Islands (US)\", \"Yemen\", \"Zambia\", \"Zimbabwe\"];\r\n\r\nexport default COUNTRY_LIST;","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\r\nimport COUNTRY_LIST from '../../constants/LIST_OF_COUNTRIES';\r\nimport { MDBInput } from 'mdbreact';\r\nimport './RegisterForm.scss';\r\n\r\n// Function to display all countires name in Select country field\r\nconst selectCountryName = (array) => {\r\n    return array.map((country, index) => {\r\n        return (\r\n            <option value={toString(index + 1)}>{array[index]}</option>\r\n        )\r\n    })\r\n\r\n}\r\n\r\n\r\nclass RegisterForm extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        emailConfirm: '',\r\n        sex: '',\r\n        country: '',\r\n        notes: '',\r\n        dateOfBirth: '',\r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n        let target = event.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value\r\n\r\n        this.setState({\r\n            name: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n                <MDBRow>\r\n                    <MDBCol md=\"6\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <p className=\"h4 text-center mb-4\">Sign up</p>\r\n                            {/* FIRST NAME */}\r\n                            <label htmlFor=\"name\" className=\"grey-text\">\r\n                                First name\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                className=\"form-control\"\r\n                                name=\"name\"\r\n                                value={this.state.firstName}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <br />\r\n\r\n                            {/* LAST NAME */}\r\n                            <label htmlFor=\"surname\" className=\"grey-text\">\r\n                                Last name\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"surname\"\r\n                                className=\"form-control\"\r\n                                name='surname'\r\n                                value={this.state.lastName}\r\n                                onChange={this.handleChange}\r\n\r\n                            />\r\n                            <br />\r\n\r\n                            {/* USERNAME */}\r\n                            <label htmlFor=\"username\" className=\"grey-text\">\r\n                                Username\r\n                            </label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"username\"\r\n                                className=\"form-control\"\r\n                                name='username'\r\n                                value={this.state.username}\r\n                                onChange={this.handleChange}\r\n\r\n                            />\r\n                            <br />\r\n\r\n                            {/* EMAIL */}\r\n                            <label htmlFor=\"email\" className=\"grey-text\">\r\n                                Email\r\n                            </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={this.handleChange}\r\n\r\n                            />\r\n                            <br />\r\n\r\n                            {/* CONFIRM EMAIL */}\r\n                            <label\r\n                                htmlFor=\"confirm-email\"\r\n                                className=\"grey-text\"\r\n                            >\r\n                                Confirm your email\r\n                            </label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"confirm-email\"\r\n                                className=\"form-control\"\r\n                                name='confirm-email'\r\n                                value={this.state.emailConfirm}\r\n                                onChange={this.handleChange}\r\n\r\n                            />\r\n                            <br />\r\n\r\n                            {/* PASSWORD */}\r\n                            <label\r\n                                htmlFor=\"password\"\r\n                                className=\"grey-text\"\r\n                            >\r\n                                Password\r\n                            </label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n\r\n                            />\r\n                            <br />\r\n                            {/* SEX */}\r\n                            <div>\r\n                                <label htmlFor=\"sex\" className=\"grey-text\">\r\n                                    Sex\r\n                                </label>\r\n                                <select className=\"browser-default custom-select\" onChange={this.handleChange}>\r\n                                    <option value={this.state.sex}>Female</option>\r\n                                    <option value={this.state.sex}>Male</option>\r\n                                    <option value={this.state.sex}>Other</option>\r\n                                </select>\r\n                            </div>\r\n                            <br />\r\n\r\n                            {/* COUNTRY */}\r\n                            <div>\r\n                                <label htmlFor=\"defaultFormRegisterNameEx\" className=\"grey-text\">\r\n                                    Country\r\n                                </label>\r\n                                <select className=\"browser-default custom-select\" value={this.state.country} onChange={this.handleChange}>\r\n                                    {selectCountryName(COUNTRY_LIST)}\r\n                                </select>\r\n                            </div>\r\n                            <br />\r\n\r\n                            {/* NOTES */}\r\n                            <div>\r\n                                <label htmlFor=\"notes\" className=\"grey-text\">\r\n                                    Notes\r\n                                </label>\r\n                                <MDBInput type=\"textarea\" rows=\"3\" />\r\n                            </div>\r\n                            <br />\r\n\r\n                            {/* DATE OF BIRTH */}\r\n                            <div>\r\n                                <label htmlFor=\"defaultFormRegisterNameEx\" className=\"grey-text\">\r\n                                    Date of birth\r\n                                </label>\r\n                            </div>\r\n\r\n                            {/* SUBMIT */}\r\n                            <div className=\"text-center mt-4\">\r\n                                <MDBBtn color=\"unique\" type=\"submit\">\r\n                                    Register\r\n                                </MDBBtn>\r\n                            </div>\r\n                        </form>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './Register.scss';\r\nimport NavBar from '../homepage/NavBar';\r\nimport RegisterForm from '../registerForm/RegisterForm';\r\n\r\nclass Register extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <>\r\n                <NavBar />\r\n                <div className=\"bookflight-container\">\r\n                    <RegisterForm />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nconst LoginForm = () => {\r\n    return (\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <form>\r\n                        <p className=\"h5 text-center mb-4\">Sign in</p>\r\n                        <div className=\"grey-text\">\r\n                            <MDBInput\r\n                                label=\"Type your username\"\r\n                                icon=\"envelope\"\r\n                                group\r\n                                type=\"email\"\r\n                                validate\r\n                                error=\"wrong\"\r\n                                success=\"right\"\r\n                            />\r\n                            <MDBInput\r\n                                label=\"Type your password\"\r\n                                icon=\"lock\"\r\n                                group\r\n                                type=\"password\"\r\n                                validate\r\n                            />\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <MDBBtn>Login</MDBBtn>\r\n                        </div>\r\n                    </form>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { Component } from 'react';\r\nimport LoginForm from '../loginForm/LoginForm';\r\nimport NavBar from '../homepage/NavBar';\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"login-container\">\r\n                <NavBar />\r\n                <br />\r\n                <LoginForm />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","const TOURISTS_API_URL = \"http://127.0.0.1:8000/api-tourists/tourists/\";\r\nconst FLIGHTS_API_URL = \"http://127.0.0.1:8000/api-flights/flights/\";\r\n\r\nexport { TOURISTS_API_URL, FLIGHTS_API_URL };","import React, { Component } from 'react'\r\nimport './Tourists.scss';\r\nimport axios from 'axios'\r\nimport { TOURISTS_API_URL } from '../../constants/API_URLS';\r\nimport NavBar from '../homepage/NavBar';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\n\r\nclass Tourists extends Component {\r\n    state = {\r\n        tourists: [], // That will be all flights avalivable in api\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Getting all flights from api and changeing state\r\n        axios.get(TOURISTS_API_URL).then(response => {\r\n            this.setState({\r\n                tourists: response.data,\r\n            })\r\n        })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"tourists-container\">\r\n                <NavBar />\r\n                <h3>Tourists</h3>\r\n                <table>\r\n                    <tr>\r\n                        <th>\r\n                            Id\r\n                        </th>\r\n                        <th>\r\n                            Username\r\n                        </th>\r\n                        <th>\r\n                            First Name\r\n                        </th>\r\n                        <th>\r\n                            Last Name\r\n                        </th>\r\n                        <th>\r\n                            Email\r\n                        </th>\r\n                        <th>\r\n                            Birth Date\r\n                        </th>\r\n                        <th>\r\n                            Sex\r\n                        </th>\r\n                        <th>\r\n                            Country\r\n                        </th>\r\n                        <th>\r\n                            Actions\r\n                        </th>\r\n                    </tr>\r\n\r\n                    {/* Displaying tourists from API */}\r\n                    {this.state.tourists.map(tourist => {\r\n                        return (\r\n                            <tr>\r\n                                <td>{tourist.pk}</td>\r\n                                <td>{tourist.username}</td>\r\n                                <td>{tourist.first_name}</td>\r\n                                <td>{tourist.last_name}</td>\r\n                                <td>{tourist.email}</td>\r\n                                <td>{tourist.birth_date}</td>\r\n                                <td>{tourist.sex}</td>\r\n                                <td>{tourist.country}</td>\r\n                                <td>\r\n                                    <Link to={\"tourist-flights/\" + tourist.pk + '/'}>Show flights list</Link>\r\n                                    <Link to={\"edit-tourist/\" + tourist.pk + '/'}>Edit</Link>\r\n                                    <Link to={\"delete-tourist/\" + tourist.pk + '/'}>Delete</Link>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </table>\r\n                <Link to=\"/add-tourist\">Add tourist</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tourists;","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { FLIGHTS_API_URL } from '../../constants/API_URLS';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\n\r\nclass SingleFlight extends Component {\r\n    // State of every single flight which is in api\r\n    state = {\r\n        singleFlightData: '', // Data of single flight which will be get from api by axios\r\n        numberOfPassengers: '' // Number of passengers which will be assigned to seatsAmount props from Flights component\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Getting data of single flight from api\r\n        axios.get(FLIGHTS_API_URL + this.props.flightPk + '/').then(response => {\r\n            //  Setting state data\r\n            this.setState({\r\n                singleFlightData: response.data,\r\n                numberOfPassengers: response.data.tourists.length\r\n            })\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* If number of passangerss of this flight is  greater than its seats amount then we wont display Add tourist link*/}\r\n                {this.props.seatsAmount > this.state.numberOfPassengers &&\r\n                    <Link to={'add-tourist-to-flight/' + this.state.singleFlightData.pk} >Add tourist</Link>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SingleFlight;","import React, { Component } from 'react'\r\nimport './Flights.scss';\r\nimport axios from 'axios'\r\nimport { FLIGHTS_API_URL } from '../../constants/API_URLS';\r\nimport NavBar from '../homepage/NavBar';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\nimport SingleFlight from './SingleFLight';\r\n\r\nclass Flights extends Component {\r\n    state = {\r\n        flights: [], // All flights that are in api\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Getting data from api\r\n        axios.get(FLIGHTS_API_URL).then(response => {\r\n            // Setting state to list of objects of flights\r\n            this.setState({\r\n                flights: response.data,\r\n            })\r\n        })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flights-container\">\r\n                <NavBar />\r\n                <h2>Flights</h2>\r\n                <table>\r\n                    <tr>\r\n                        <th>\r\n                            Flight Id\r\n                        </th>\r\n                        <th>\r\n                            Departure Date\r\n                        </th>\r\n                        <th>\r\n                            Arrival Date\r\n                        </th>\r\n                        <th>\r\n                            Seats\r\n                        </th>\r\n                        <th>\r\n                            Ticket Price\r\n                        </th>\r\n                        <th>\r\n                            Actions\r\n                        </th>\r\n                    </tr>\r\n\r\n                    {/* Displaying all flights from API */}\r\n                    {this.state.flights.map(flight => {\r\n                        return (\r\n                            <tr key={flight.pk}>\r\n                                <td>{flight.pk}</td>\r\n                                <td>{flight.departure_date}</td>\r\n                                <td>{flight.arrival_date}</td>\r\n                                <td>{flight.seats_amount}</td>\r\n                                <td>{flight.ticket_price}</td>\r\n                                <td>\r\n                                    {/* Every flight is one component with proper props of itself */}\r\n                                    <SingleFlight flightPk={flight.pk} seatsAmount={flight.seats_amount} />\r\n                                    {/* Redirections to other pages */}\r\n                                    <Link to={\"/flight-passengers/\" + flight.pk + '/'}>Show tourists list</Link>\r\n                                    <Link to={'/edit-flight/' + flight.pk}>Edit flight</Link>\r\n                                    <Link to={'/delete-flight/' + flight.pk}>Delete flight</Link>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </table>\r\n                <Link to=\"/add-flight\">Add flight </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Flights;","import React, { Component } from 'react'\r\nimport './SingleTourist.scss';\r\nimport axios from 'axios';\r\nimport { FLIGHTS_API_URL } from '../../constants/API_URLS';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\n\r\nclass SingleTourist extends Component {\r\n    // \r\n    state = {\r\n        touristData: '',\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(this.props.touristUrl).then(response => {\r\n            this.setState({\r\n                touristData: response.data\r\n            })\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n        console.log(this.state.touristData)\r\n\r\n        axios.get(FLIGHTS_API_URL + this.state.flightPk + '/')\r\n            .then(response => {\r\n                this.setState({\r\n                    flightsSeatsAmount: response.data.seats_amount\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    {this.state.touristData.pk}\r\n                </td>\r\n                <td>\r\n                    {this.state.touristData.first_name}\r\n                </td>\r\n                <td>\r\n                    {this.state.touristData.last_name}\r\n                </td>\r\n                <td>\r\n                    {this.state.touristData.username}\r\n                </td>\r\n                <td>\r\n                    {this.state.touristData.email}\r\n                </td>\r\n                <td>\r\n                    {this.state.touristData.birth_date}\r\n                </td>\r\n                <td>\r\n                    {this.state.touristData.sex}\r\n                </td>\r\n                <td>\r\n                    {this.state.touristData.country}\r\n                </td>\r\n                <td>\r\n\r\n\r\n                    <Link onClick={this.props.handleDeletion}>Delete from flight</Link>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SingleTourist;","import React, { Component } from 'react'\r\nimport './TouristList.scss';\r\nimport axios from 'axios';\r\nimport { FLIGHTS_API_URL, TOURISTS_API_URL } from '../../constants/API_URLS';\r\nimport NavBar from '../homepage/NavBar';\r\nimport SingleTourist from './SingleTourist';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n// DOKONCZYC\r\nclass TouristList extends Component {\r\n    state = {\r\n        pk: this.props.match.params.flightNumber,\r\n        listOfTourists: [], // List of passsengers of flight number pk\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get(FLIGHTS_API_URL + this.state.pk + '/').then(response => {\r\n            this.setState({\r\n                listOfTourists: response.data.tourists\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n    }\r\n\r\n    handleDeletion(touristPk) {\r\n        let url = TOURISTS_API_URL + touristPk + '/' // Tourist which should be removed from passengers of flight in api\r\n        const finalListOfTourists = Object.assign([], this.state.listOfTourists) // Copy of state list which will be later saved as main listOfTourists in  api\r\n        finalListOfTourists.splice(finalListOfTourists.indexOf(url, 1)) // Removeing tourist from list\r\n        // Updateing api by removed tourist\r\n        axios.patch(FLIGHTS_API_URL + this.state.pk + '/', {\r\n            tourists: finalListOfTourists\r\n        }).then(response => {\r\n            alert(\"Tourist was successfully removed from flight number \" + this.state.pk) // Notification\r\n            this.props.history.push('/flights') // Redirection\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"tourists-container\">\r\n                <NavBar />\r\n                <h3>List of tourists of flight number {this.state.pk}</h3>\r\n                <table>\r\n                    <tr>\r\n                        <th>\r\n                            Id\r\n                        </th>\r\n                        <th>\r\n                            First Name\r\n                        </th>\r\n                        <th>\r\n                            Last Name\r\n                        </th>\r\n                        <th>\r\n                            Username\r\n                        </th>\r\n                        <th>\r\n                            Email\r\n                        </th>\r\n                        <th>\r\n                            Birth date\r\n                        </th>\r\n                        <th>\r\n                            Sex\r\n                        </th>\r\n\r\n                        <th>\r\n                            Country\r\n        </th>\r\n                        <th>\r\n                            Action\r\n                        </th>\r\n                    </tr>\r\n                    {/* Displaying tourists from touristsList */}\r\n                    {this.state.listOfTourists.map(touristUrl => {\r\n                        return (\r\n                            <SingleTourist touristUrl={touristUrl} flightPk={this.state.pk} handleDeletion={this.handleDeletion.bind(this)} listOfTourists={this.state.listOfTourists} />\r\n                        )\r\n                    })}\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(TouristList);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class TouristList extends Component {\r\n//     state = { \r\n//         pk:this.props.match.params.flightNumber,\r\n//         listOfTourists:[],\r\n//      }\r\n\r\n\r\n// componentDidMount(){\r\n//     axios.get(FLIGHTS_API_URL + this.state.pk + '/').then(response => {\r\n//         this.setState({\r\n//             listOfTourists:response.data.tourists\r\n//         })\r\n\r\n//     }).catch(error => {\r\n//         console.log(error)\r\n//     })\r\n//     console.log(this.state.pk)\r\n// }\r\n\r\n// handleDeletion(touristPk){\r\n// let url = TOURISTS_API_URL + touristPk + '/'\r\n// let finallList = this.state.listOfTourists.splice(this.state.listOfTourists.indexOf(url), 1 );\r\n// this.setState({\r\n//   listOfTourists:finallList\r\n// })\r\n//     }\r\n\r\n\r\n//     render() { \r\n//         return ( \r\n//             <div className=\"tourists-container\">\r\n//             <NavBar />\r\n//                 <h3>List of tourists of flight number {this.state.pk}</h3>\r\n//                 <table>\r\n//                     <tr>\r\n//                         <th>\r\n//                             Id\r\n//                         </th>\r\n//                         <th>\r\n//                             First Name\r\n//                         </th>\r\n//                         <th>\r\n//                             Last Name\r\n//                         </th>\r\n//                         <th>\r\n//                             Username\r\n//                         </th>\r\n//                         <th>\r\n//                             Email\r\n//                         </th>\r\n//                         <th>\r\n//                             Birth date\r\n//                         </th>\r\n//                         <th>\r\n//                             Sex\r\n//                         </th>\r\n\r\n//     <th>\r\n//         Country\r\n//         </th>\r\n//         <th>\r\n//                             Action (dobule click)\r\n//                         </th>\r\n//                     </tr>\r\n//                     {/* Displaying tourists from touristsList */}\r\n// {this.state.listOfTourists.map(touristUrl => {\r\n//     return (\r\n//         <SingleTourist touristUrl={touristUrl} flightPk={this.state.pk} handleDeletion={this.handleDeletion}/>\r\n//     )\r\n// })}\r\n//                 </table>\r\n//                 <Link to={'/add-tourist-to-flight/' + this.state.pk + '/'}>Add tourist</Link>\r\n//             </div>\r\n//          );\r\n//     }\r\n// }\r\n\r\n// export default TouristList;","import React, { Component } from 'react'\r\nimport './AddFlight.scss'\r\nimport NavBar from '../../homepage/NavBar';\r\nimport axios from 'axios';\r\nimport { FLIGHTS_API_URL } from '../../../constants/API_URLS';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nclass AddFlight extends Component {\r\n    state = {\r\n        // For handling change of form inputs\r\n        departureDate: '',\r\n        arrivalDate: '',\r\n        seatsAmount: '',\r\n        ticketPrice: '',\r\n    }\r\n\r\n    //  Handling changes of data inputed by user, universal for every input field\r\n    handleChange = event => {\r\n        let target = event.target\r\n        let name = target.name\r\n        let value = target.value\r\n        // Changeing proper data from state defined by name of input field\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    // Posting inputed by user data to api\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        // Creating object which will be posted\r\n        const flight = {\r\n            departure_date: this.state.departureDate,\r\n            arrival_date: this.state.arrivalDate,\r\n            seats_amount: this.state.seatsAmount,\r\n            ticket_price: this.state.ticketPrice,\r\n        }\r\n        // Posting to api flight object\r\n        axios.post(FLIGHTS_API_URL, flight).then(response => {\r\n            alert(\"Flight was added successfully\") // Notification\r\n            this.props.history.push('/flights') // Redirection\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"add-flight-container\">\r\n                <NavBar />\r\n                <h1>Add flight</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Departure date\r\n                                <input type=\"datetime\" id='departureDate' name=\"departureDate\" onChange={this.handleChange} placeholder=\"YYYY-MM-DD HH:SS\">\r\n                        </input>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Arrival date\r\n                                <input type=\"datetime\" id='arrivalDate' name=\"arrivalDate\" onChange={this.handleChange} placeholder=\"YYYY-MM-DD HH:SS\">\r\n                        </input>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Seats amount\r\n                                <input type=\"number\" id='seatsAmount' name=\"seatsAmount\" onChange={this.handleChange}>\r\n                        </input>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Ticket price\r\n                                <input type=\"number\" id='ticketPrice' step='0.01' name=\"ticketPrice\" onChange={this.handleChange} f>\r\n                        </input>\r\n                    </label>\r\n                    <br />\r\n                    <MDBBtn onClick={this.handleSubmit} color=\"primary\" rounded>Add flight</MDBBtn>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withRouter(AddFlight);","import React, { Component } from 'react'\r\nimport './AddTourist.scss';\r\nimport NavBar from '../../homepage/NavBar';\r\nimport LIST_OF_COUNTRIES from '../../../constants/LIST_OF_COUNTRIES';\r\nimport axios from 'axios';\r\nimport { TOURISTS_API_URL } from '../../../constants/API_URLS';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nclass AddTourist extends Component {\r\n    state = {\r\n        // For handling change of form inputs\r\n        username: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        birth_date: '',\r\n        sex: 'Female', // By default\r\n        country: 'Afghanistan', // By default\r\n        notes: '',\r\n    }\r\n\r\n    //  Handling changes of data inputed by user, for every field that is not select\r\n    handleChange = event => {\r\n        let name = event.target.name\r\n        let value = event.target.value\r\n        // Changeing proper data from state defined by name of input field\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    //  Handling changes of data selected by user, for sex select field \r\n    handleSexSelectChange = event => {\r\n        // Changeing sex data from state \r\n        this.setState(\r\n            { sex: event.target.value }\r\n        )\r\n    }\r\n\r\n    //  Handling changes of data selected by user, for country select field \r\n    handleCountrySelectChange = event => {\r\n        // Changeing country data from state \r\n        this.setState(\r\n            { country: event.target.value }\r\n        )\r\n    }\r\n\r\n    //  Handling changes of data selected by user, for notes textarea field \r\n    handleNotesChanges = event => {\r\n        // Changeing notes data from state \r\n        this.setState({\r\n            notes: event.target.value\r\n        })\r\n    }\r\n\r\n    // Posting inputed bu user data to api\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        // Creating object which will be posted\r\n        const tourist = {\r\n            username: this.state.username,\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name,\r\n            email: this.state.email,\r\n            birth_date: this.state.birth_date,\r\n            sex: this.state.sex,\r\n            country: this.state.country,\r\n            notes: this.state.notes\r\n        }\r\n        // Posting to api created tourist object\r\n        axios.post(TOURISTS_API_URL, tourist).then(response => {\r\n            console.log(response)\r\n            alert(\"Tourist was added succesfully\") // Notification\r\n            this.props.history.push('/tourists') // Redirection\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-tourist-container\">\r\n                <NavBar />\r\n                <h1>Add tourist</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        First name\r\n                    <br />\r\n                        <input type='text' name=\"first_name\" id=\"first_name\" placeholder=\"Type your first name\" onChange={this.handleChange} ></input>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Last name\r\n                    <br />\r\n                        <input type='text' name=\"last_name\" id=\"last_nameirth\" placeholder=\"Type your last name\" onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Username\r\n                    <br />\r\n                        <input type='text' name=\"username\" id=\"username\" placeholder=\"Type your username\" onChange={this.handleChange} ></input>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Email\r\n                    <br />\r\n                        <input type='email' name=\"email\" id=\"email\" placeholder=\"Type your email\" onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Birth date\r\n                    <br />\r\n                        <input type='datetime' name=\"birth_date\" id=\"birth_date\" placeholder=\"DD-MM-YYYY\" onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Sex\r\n                    <br />\r\n                        <select value={this.state.sex} onChange={this.handleSexSelectChange}>\r\n                            <option value=\"Female\">Female</option>\r\n                            <option value=\"Male\">Male</option>\r\n                            <option value=\"Other\">Other</option>\r\n                        </select>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Country\r\n                    <br />\r\n                        <select value={this.state.country} onChange={this.handleCountrySelectChange}>\r\n                            {LIST_OF_COUNTRIES.map(country => {\r\n                                return (\r\n                                    <option key={country} >\r\n                                        {country}\r\n                                    </option>\r\n                                )\r\n                            })}\r\n                        </select>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Notes\r\n                    <br />\r\n                        <textarea value={this.state.notes} onChange={this.handleNotesChanges}>\r\n                        </textarea>\r\n                    </label>\r\n                    <br />\r\n                    <MDBBtn onClick={this.handleSubmit} color=\"primary\" rounded>Add tourist</MDBBtn>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AddTourist);","import React, { Component } from 'react'\r\nimport './DeleteFlight.scss';\r\nimport axios from 'axios';\r\nimport NavBar from '../../homepage/NavBar';\r\nimport { MDBBtn } from \"mdbreact\";\r\nimport { FLIGHTS_API_URL } from '../../../constants/API_URLS';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass DeleteFlight extends Component {\r\n\r\n    // Deleting flight whose pk is flightPk\r\n    deleteFlight = (flighPk) => {\r\n        axios.delete(FLIGHTS_API_URL + flighPk + '/').then(response => {\r\n            alert(\"Flight number \" + flighPk + \" was successfully removed\") // Notification\r\n            this.props.history.push('/flights') // Redirection\r\n\r\n        })\r\n    }\r\n\r\n    // Cancel deletion\r\n    cancelDeletion() {\r\n        this.props.history.push('/flights') // Redirection\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"delete-flight-container\">\r\n                <NavBar />\r\n                <h3>Are you sure You want to delete flight number {this.props.match.params.flightNumber}?</h3>\r\n                <MDBBtn onClick={() => this.deleteFlight(this.props.match.params.flightNumber)} outline color=\"danger\">Yes</MDBBtn>\r\n                <MDBBtn onClick={() => this.cancelDeletion()} outline color=\"primary\">No</MDBBtn>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(DeleteFlight);","import React, { Component } from 'react'\r\nimport './EditFlight.scss'\r\nimport axios from 'axios';\r\nimport NavBar from '../../homepage/NavBar';\r\nimport { FLIGHTS_API_URL } from '../../../constants/API_URLS';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\nimport { MDBBtn } from \"mdbreact\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass EditFlight extends Component {\r\n    // State of all fields witch can be edited\r\n    state = {\r\n        departureDate: '',\r\n        arrivalDate: '',\r\n        seatsAmount: '',\r\n        ticketPrice: '',\r\n        tourists: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        //  Getting all actual data of flight to be displayed on edit page\r\n        axios.get(FLIGHTS_API_URL + this.props.match.params.flightNumber + \"/\").then(response => {\r\n            //  Setting state and input fields\r\n            this.setState({\r\n                departureDate: response.data.departure_date,\r\n                arrivalDate: response.data.arrival_date,\r\n                seatsAmount: response.data.seats_amount,\r\n                ticketPrice: response.data.ticket_price,\r\n                tourists: response.data.tourists\r\n            })\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    //  Handling changes of input fields\r\n    handleChange = event => {\r\n        let target = event.target\r\n        let name = target.name\r\n        let value = target.value\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    // Makeing changes in api of flight which pk is in url \r\n    editFlight = event => {\r\n        event.preventDefault()\r\n        // Patching changes using inputed bu user fields data\r\n        axios.patch(FLIGHTS_API_URL + this.props.match.params.flightNumber + '/', {\r\n            arrival_date: this.state.arrivalDate,\r\n            departure_date: this.state.departureDate,\r\n            seats_amount: this.state.seatsAmount,\r\n            ticket_price: this.state.ticketPrice\r\n        }).then(response => {\r\n            alert(\"Flight number \" + this.props.match.params.flightNumber + ' was edited successfully')\r\n        }) // Notification\r\n        this.props.history.push('/flights') // Redirection\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"edit-flight-container\">\r\n                <NavBar />\r\n                <h3>Edit flight number {this.props.match.params.flightNumber}</h3>\r\n                <form onSubmit={this.editFlight}>\r\n                    <label>\r\n                        Departure date\r\n                    <br />\r\n                        <input type=\"datetime\" value={this.state.departureDate} name=\"departureDate\" onChange={this.handleChange}>\r\n                        </input>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Arival date\r\n                    <br />\r\n                        <input type=\"datetime\" value={this.state.arrivalDate} name=\"arrivalDate\" onChange={this.handleChange}>\r\n                        </input>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Seats amount\r\n                    <br />\r\n                        <input type=\"number\" value={this.state.seatsAmount} name=\"seatsAmount\" onChange={this.handleChange}>\r\n                        </input>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Ticket price\r\n                    <br />\r\n                        <input type=\"number\" step=\"0.01\" value={this.state.ticketPrice} name=\"ticketPrice\" onChange={this.handleChange}>\r\n                        </input>\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n\r\n                        <Link to={\"/flight-passengers/\" + this.props.match.params.flightNumber + '/'}>Passengers</Link> {/* Link to passengers of the flight which id is in url */}\r\n                    </label>\r\n                    <br />\r\n                    <MDBBtn onClick={this.editFlight} color=\"primary\">Edit</MDBBtn>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(EditFlight);","import React, { Component } from 'react'\r\nimport './EditTourist.scss';\r\nimport NavBar from '../../homepage/NavBar';\r\nimport axios from 'axios';\r\nimport { TOURISTS_API_URL } from '../../../constants/API_URLS';\r\nimport LIST_OF_COUNTRIES from '../../../constants/LIST_OF_COUNTRIES';\r\nimport { MDBBtn } from \"mdbreact\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass EditTourist extends Component {\r\n        // State of all fields witch can be edited\r\n    state = { \r\n        pk:'',\r\n        username:'',\r\n        firstName:'',\r\n        lastName:'',\r\n        email:'',\r\n        birthDate:'',\r\n        sex:'',\r\n        country:'',\r\n     }\r\n\r\ncomponentDidMount(){\r\n            //  Getting all actual data of tourist to be displayed on edit page\r\n    axios.get(TOURISTS_API_URL + this.props.match.params.touristNumber + '/').then(response => {\r\n            //  Setting state and input fields\r\n            this.setState({\r\n            pk:response.data.pk,\r\n            username:response.data.username,\r\n            firstName:response.data.first_name,\r\n            lastName:response.data.last_name,\r\n            email:response.data.email,\r\n            birthDate:response.data.birth_date,\r\n            sex:response.data.sex,\r\n            country:response.data.country\r\n        })\r\n    })\r\n}\r\n    //  Handling changes of input fields\r\nhandleChange = event => {\r\n    let target = event.target\r\n    let name = target.name\r\n    let value = target.value\r\n    \r\n    this.setState({\r\n        [name]:value\r\n    })\r\n}\r\n\r\n    //  Handling changes of select sex field\r\nhandleSexSelectChange = event => {\r\n    this.setState(\r\n        {sex:event.target.value}\r\n    )\r\n}\r\n\r\n    //  Handling changes of select country field\r\nhandleCountrySelectChange = event => {\r\n    this.setState(\r\n        {country:event.target.value}\r\n    )\r\n}\r\n\r\n// Makeing changes in api of tourist which pk is in url \r\neditTourist = event => {\r\n    event.preventDefault()\r\n    // Patching changes using inputed bu user fields data\r\n    axios.patch(TOURISTS_API_URL + this.props.match.params.touristNumber + '/',{\r\n        username: this.state.username,\r\n        first_name: this.state.firstName,\r\n        last_name: this.state.lastName,\r\n        email: this.state.email,\r\n        birth_date: this.state.birthDate,\r\n        sex: this.state.sex,\r\n        country: this.state.country,\r\n    }).then(response => {\r\n        alert(\"Tourist whose id is \" + this.state.pk + ' was edited successfully')    }) // Notification\r\nthis.props.history.push('/tourists') // Redirection\r\n\r\n}\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"edit-tourist-container\">\r\n            <NavBar/>\r\n            <h3>Edit tourist that Id is equal to {this.state.pk} </h3>\r\n            <form onSubmit={this.editTourist}>\r\n                First name\r\n                <br/>\r\n                <label>\r\n                    <input name=\"firstName\" onChange={this.handleChange} type=\"text\" value={this.state.firstName}></input>\r\n                </label>\r\n                <br/>\r\n                Last name\r\n                <br/>\r\n\r\n                <label>\r\n                    <input name=\"lastName\" onChange={this.handleChange} type=\"text\" value={this.state.lastName}></input>\r\n                </label>\r\n                <br/>\r\n                Username\r\n                <br/>\r\n                <label>\r\n                    <input name=\"username\" onChange={this.handleChange} type=\"text\" value={this.state.username}></input>\r\n                </label>\r\n                <br/>\r\n                Email\r\n                <br/>\r\n                <label>\r\n                    <input name=\"email\" onChange={this.handleChange} type=\"text\" value={this.state.email}></input>\r\n                </label>\r\n                <br/>\r\n                Birth date\r\n                <br/>\r\n                <label>\r\n                    <input name=\"birthDate\" onChange={this.handleChange} type=\"datetime\" value={this.state.birthDate}></input>\r\n                </label>\r\n                <br/>\r\n                <label>\r\n                    Sex\r\n                    <br/>\r\n                    <select value={this.state.sex} onChange={this.handleSexSelectChange}>\r\n                    <option value=\"Female\">Female</option>\r\n                    <option value=\"Male\">Male</option>\r\n                    <option value=\"Other\">Other</option>\r\n                    </select>\r\n                </label>\r\n                <br/>\r\n                <label>\r\n                    Country\r\n                    <br/>\r\n                    <select value={this.state.country} onChange={this.handleCountrySelectChange}>\r\n                        {LIST_OF_COUNTRIES.map(country => {\r\n                            return (\r\n                                <option key={country} >\r\n                                {country}\r\n                                </option>\r\n                            )\r\n                        })}\r\n                    </select>                \r\n    </label>\r\n                <br/>\r\n                <MDBBtn onClick={this.editTourist} color=\"primary\">Edit</MDBBtn>\r\n\r\n            </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(EditTourist);","import React, { Component } from 'react'\r\nimport './DeleteTourist.scss';\r\nimport NavBar from '../../homepage/NavBar';\r\nimport { TOURISTS_API_URL } from '../../../constants/API_URLS';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { MDBBtn } from \"mdbreact\";\r\nimport axios from 'axios';\r\n\r\nclass DeleteTourist extends Component {\r\n\r\n    // Deleting tourist whose pk is touristPk\r\n    deleteTourist = (touristPk) => {\r\n        axios.delete(TOURISTS_API_URL + touristPk + '/').then(response => {\r\n            alert(\"Tourist whose Id number is \" + touristPk + \" was successfully removed\") // Notification\r\n            this.props.history.push('/tourists') // Redirection\r\n        })\r\n    }\r\n\r\n    // Cancel deletion\r\n    cancelDeletion() {\r\n        this.props.history.push('/tourists') // Redirection\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"delete-tourist-container\">\r\n                <NavBar />\r\n                <h3>Are you sure You want to delete tourist number {this.props.match.params.touristNumber}?</h3>\r\n                <MDBBtn onClick={() => this.deleteTourist(this.props.match.params.touristNumber)} outline color=\"danger\">Yes</MDBBtn>\r\n                <MDBBtn onClick={() => this.cancelDeletion()} outline color=\"primary\">No</MDBBtn>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(DeleteTourist);","import React, { Component } from 'react'\r\nimport './AddFlightToTourist.scss';\r\nimport NavBar from '../homepage/NavBar';\r\nimport axios from 'axios';\r\nimport { FLIGHTS_API_URL, TOURISTS_API_URL } from '../../constants/API_URLS';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass AddFlightToTourist extends Component {\r\n    state = {\r\n        touristPk: this.props.match.params.touristNumber, // Slug in url of actual tourist\r\n        allFlights: [], // To display all flights\r\n        touristFlights: [] // Flights of user which pk is touristPk\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Getting all flights from api\r\n        axios.get(FLIGHTS_API_URL).then(response => {\r\n            this.setState({\r\n                allFlights: response.data\r\n            })\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n        // Getting flights of user which pk is touristPk\r\n        axios.get(TOURISTS_API_URL + this.state.touristPk + '/').then(response => {\r\n            this.setState({\r\n                touristFlights: response.data.flights\r\n            })\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    // Adding flight to tourist which pk is touristPk\r\n    addFlight(flightPk) {\r\n        const finalListOfFlights = this.state.touristFlights.slice() // Getting copy of touristFlights\r\n        const url = FLIGHTS_API_URL + flightPk + '/' // Creating flight that will be added to api\r\n        finalListOfFlights.push(url)\r\n        // Adding modifide flights list to api\r\n        axios.patch(TOURISTS_API_URL + this.state.touristPk + '/', { flights: finalListOfFlights }).then(response => {\r\n            console.log(response)\r\n\r\n            // Updating state\r\n            this.setState({\r\n                flights: finalListOfFlights\r\n            })\r\n        })\r\n        alert(\"Flight was added successfully\") // Notification\r\n        this.props.history.push('/tourists') // Redirection\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-flight-to-tourist-container\">\r\n                <NavBar />\r\n                <h3>Which flight should be added to tourist number {this.state.touristPk}?</h3>\r\n\r\n                {/* TABLE OF ALL AVALIABLE FLIGHTS */}\r\n                <table>\r\n                    <tr>\r\n                        <th>\r\n                            Id\r\n                    </th>\r\n                        <th>\r\n                            Departure date\r\n                    </th>\r\n                        <th>\r\n                            Arrival Date\r\n                    </th>\r\n                        <th>\r\n                            Seats amount\r\n                    </th>\r\n                        <th>\r\n                            Ticket price\r\n                    </th>\r\n                        <th>Add </th>\r\n                    </tr>\r\n\r\n                    {/* DISPLAYING DATA OF FLIGHTS FROM STATE */}\r\n                    {this.state.allFlights.map(flight => {\r\n                        return (\r\n                            <tr>\r\n                                <td>\r\n                                    {flight.pk}\r\n                                </td>\r\n                                <td>\r\n                                    {flight.departure_date}\r\n                                </td>\r\n                                <td>\r\n                                    {flight.arrival_date}\r\n                                </td>\r\n                                <td>\r\n                                    {flight.seats_amount}\r\n                                </td>\r\n                                <td>\r\n                                    {flight.ticket_price}\r\n                                </td>\r\n                                <td>\r\n                                    <button onClick={() => this.addFlight(flight.pk)}>Add</button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AddFlightToTourist);","import React, { Component } from 'react'\r\nimport './SingleFlight.scss';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\n\r\nclass SingleFlight extends Component {\r\n    state = {\r\n        flightData: '' // Data of single flight whose url we get from props form UserFlightList component\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Getting data from url that we get from props from UserFlightList component\r\n        axios.get(this.props.flightUrl).then(response => {\r\n            this.setState({\r\n                flightData: response.data\r\n            })\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>\r\n\r\n                    {this.state.flightData.pk}\r\n\r\n                </td>\r\n                <td>\r\n\r\n                    {this.state.flightData.departure_date}\r\n                </td>\r\n                <td>\r\n\r\n                    {this.state.flightData.arrival_date}\r\n                </td>\r\n                <td>\r\n\r\n                    {this.state.flightData.seats_amount}\r\n                </td>\r\n                <td>\r\n\r\n                    {this.state.flightData.ticket_price}\r\n                </td>\r\n                <td>\r\n                    <Link onClick={this.props.handleDeletion}>Delete flight</Link>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SingleFlight;","import React, { Component } from 'react';\r\nimport './UserFlightsList.scss';\r\nimport NavBar from '../homepage/NavBar';\r\nimport axios from 'axios';\r\nimport { TOURISTS_API_URL, FLIGHTS_API_URL } from '../../constants/API_URLS';\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom';\r\nimport SingleFlight from './SingleFlight';\r\n\r\nclass UserFlightsList extends Component {\r\n    state = {\r\n        pk: this.props.match.params.touristNumber, // Slug from url that will be pk of tourist\r\n        touristFlights: [], // All flights of tourist whose pk is in url\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Getting data of tourist that pk is equal to pk from url slug\r\n        axios.get(TOURISTS_API_URL + this.state.pk + '/').then(response => {\r\n            this.setState({\r\n                touristFlights: response.data.flights\r\n            })\r\n\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n    }\r\n\r\n    handleDeletion(flightPk) {\r\n        let url = FLIGHTS_API_URL + flightPk + '/' // Flight which should be removed from tourist in api\r\n        const finalListOfFlights = Object.assign([], this.state.touristFlights) // Copy of state list which will be later saved as main listOfFlights in api\r\n        finalListOfFlights.splice(finalListOfFlights.indexOf(url, 1)) // Removeing flight from list\r\n        // Updateing api by removed flight\r\n        axios.patch(TOURISTS_API_URL + this.state.pk + '/', {\r\n            flights: finalListOfFlights\r\n        }).then(response => {\r\n            alert(\"Flight was successfully removed from tourist number \" + this.state.pk) // Notification\r\n            this.props.history.push('/tourists') // Redirection\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"user-flights-list-container\">\r\n                <NavBar />\r\n                <h3>List of flights of tourist number {this.state.pk}</h3>\r\n                {/* DISPLAYING FLIGHTS IF THEY ARE ANY */}\r\n                {this.state.touristFlights ? (\r\n                    <table>\r\n                        <tr>\r\n                            <th>\r\n                                Flight Id\r\n                    </th>\r\n                            <th>\r\n                                Departure date\r\n                    </th>\r\n                            <th>\r\n                                Arrival date\r\n                    </th>\r\n                            <th>\r\n                                Seats\r\n                    </th>\r\n                            <th>\r\n                                Ticket price\r\n                    </th>\r\n                            <th>\r\n                                Action\r\n                    </th>\r\n                        </tr>\r\n                        {this.state.touristFlights.map(flightUrl => {\r\n                            // Every flight will be displayed as SingleFlight component, also we give props with flight url to get api from that url in SingleFlight component\r\n                            return (<SingleFlight flightUrl={flightUrl} handleDeletion={this.handleDeletion.bind(this)} />)\r\n                        })}\r\n                    </table>) :\r\n                    // AND IF THEY NOT\r\n                    (<div> <h5>This user has not any flights assigned yet </h5>\r\n                    </div>)}\r\n                <Link to={'/add-flight-to-tourist/' + this.state.pk}>Add flight</Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserFlightsList;","import React, { Component } from 'react';\r\nimport './AddTouristToFlight.scss';\r\nimport axios from 'axios';\r\nimport NavBar from '../homepage/NavBar';\r\nimport { TOURISTS_API_URL, FLIGHTS_API_URL } from '../../constants/API_URLS';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { MDBBtn } from \"mdbreact\";\r\n\r\nclass AddTouristToFLight extends Component {\r\n    state = {\r\n        flightPk: this.props.match.params.flightNumber, // Slug from ur;\r\n        allTourists: [], // All tourists that will be displayed on page in table\r\n        passengers: [] // List with tourists which are passengers of this specific flight of id flightPk\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //  Getting all tourists from api\r\n        axios.get(TOURISTS_API_URL).then(response => {\r\n            // Assigninig tourists from api to state\r\n            this.setState({\r\n                allTourists: response.data\r\n            })\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n        // Getting all passengers of this specific flight whose pk is flightPk\r\n        axios.get(FLIGHTS_API_URL + this.state.flightPk + '/').then(response => {\r\n            // Assigninig passengers from api to state (this will be list of urls to every tourist which is in tourists field in flight api)\r\n            this.setState({\r\n                passengers: response.data.tourists\r\n            })\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    addTourist(touristPk) {\r\n        // Patching passenger which was clicked to api\r\n        const finalListOfPassengers = this.state.passengers.slice() // Getting copy of passengers array from api\r\n        const url = TOURISTS_API_URL + touristPk + '/' // Creating object which will be patched\r\n        finalListOfPassengers.push(url)\r\n        // Updateing api\r\n        axios.patch(FLIGHTS_API_URL + this.state.flightPk + '/', { tourists: finalListOfPassengers }).then(response => {\r\n            // Updating state with updated array\r\n            this.setState({\r\n                flights: finalListOfPassengers\r\n            })\r\n        })\r\n        alert(\"Tourist was added successfully\") // Notification\r\n        this.props.history.push('/flights') // Redirection\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"add-tourist-to-flight-container\">\r\n                <NavBar />\r\n                <h3>Which tourist should be added to flight number {this.state.flightPk}?</h3>\r\n                <table>\r\n                    <tr>\r\n                        <th>\r\n                            Id\r\n                    </th>\r\n                        <th>\r\n                            First name\r\n                    </th>\r\n                        <th>\r\n                            Last name\r\n                    </th>\r\n                        <th>\r\n                            Username\r\n                    </th>\r\n                        <th>\r\n                            Email\r\n                    </th>\r\n                        <th>\r\n                            Birth day\r\n                    </th>\r\n                        <th>\r\n                            Sex\r\n                    </th>\r\n                        <th>\r\n                            Country\r\n                    </th>\r\n                        <th>Add </th>\r\n                    </tr>\r\n                    {/* DISPLAYING DATA OF ALL EXISTING IN API TOURISTS */}\r\n                    {this.state.allTourists.map(tourist => {\r\n                        return (\r\n                            <tr>\r\n                                <td>\r\n                                    {tourist.pk}\r\n                                </td>\r\n                                <td>\r\n                                    {tourist.first_name}\r\n                                </td>\r\n                                <td>\r\n                                    {tourist.last_name}\r\n                                </td>\r\n                                <td>\r\n                                    {tourist.username}\r\n                                </td>\r\n                                <td>\r\n                                    {tourist.email}\r\n                                </td>\r\n                                <td>\r\n                                    {tourist.birth_date}\r\n                                </td>\r\n                                <td>\r\n                                    {tourist.sex}\r\n                                </td>\r\n                                <td>\r\n                                    {tourist.country}\r\n                                </td>\r\n                                <td>\r\n                                    <MDBBtn onClick={() => this.addTourist(tourist.pk)} rounded outline>Add</MDBBtn>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(AddTouristToFLight);","import React from 'react'\r\nimport NavBar from '../homepage/NavBar';\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <div className=\"page-not-found-container\">\r\n            <NavBar />\r\n            <h1>\r\n                404 - page not found\r\n        </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageNotFound;","import React, { Component } from 'react';\r\nimport HomePage from './components/homepage/HomePage';\r\nimport './App.scss';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Footer from './components/footer/Footer';\r\nimport Register from './components/register/Register';\r\nimport Login from './components/login/Login';\r\nimport Tourists from './components/tourists/Tourists';\r\nimport Flights from './components/flights/Flights';\r\nimport TouristList from './components/touristList/TouristList';\r\nimport AddFlight from './components/addForms/addFlight/AddFlight';\r\nimport AddTourist from './components/addForms/addTourist/AddTourist';\r\nimport DeleteFlight from './components/deleteForm/deleteFlight/DeleteFlight';\r\nimport EditFlight from './components/editForms/editFlight/EditFlight';\r\nimport EditTourist from './components/editForms/editTourist/EditTourist';\r\nimport DeleteTourist from './components/deleteForm/deleteTourist/DeleteTourist';\r\nimport AddFlightToTourist from './components/addFlightToTourist/AddFlightToTourist';\r\nimport UserFlightsList from './components/userFlightsList/UserFlightsList';\r\nimport AddTouristToFLight from './components/addTouristToFlight/AddTouristToFlight';\r\nimport PageNotFound from './components/pageNotFound/PageNotFound';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n\r\n            <Route exact path=\"/\" component={HomePage}></Route>\r\n            <Route exact path=\"/register\" component={Register}></Route>\r\n            <Route exact path=\"/login\" component={Login}></Route>\r\n\r\n            {/* FLIGHTS */}\r\n            <Route exact path=\"/flights\" component={Flights}></Route>\r\n            <Route exact path=\"/add-flight\" component={AddFlight}></Route>\r\n            <Route exact path=\"/delete-flight/:flightNumber\" component={DeleteFlight}></Route>\r\n            <Route exact path=\"/edit-flight/:flightNumber\" component={EditFlight}></Route>\r\n            <Route exact path=\"/flight-passengers/:flightNumber\" component={TouristList}></Route>\r\n            <Route exact path=\"/add-flight-to-tourist/:touristNumber\" component={AddFlightToTourist}></Route>\r\n\r\n            {/* TOURISTS */}\r\n            <Route exact path=\"/tourists\" component={Tourists}></Route>\r\n            <Route exact path=\"/add-tourist\" component={AddTourist}></Route>\r\n            <Route exact path=\"/delete-tourist/:touristNumber\" component={DeleteTourist}></Route>\r\n            <Route exact path=\"/edit-tourist/:touristNumber\" component={EditTourist}></Route>\r\n            <Route exact path=\"/tourist-flights/:touristNumber\" component={UserFlightsList}></Route>\r\n            <Route exact path=\"/add-tourist-to-flight/:flightNumber\" component={AddTouristToFLight}></Route>\r\n\r\n            <Route component={PageNotFound}></Route>\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </BrowserRouter>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}